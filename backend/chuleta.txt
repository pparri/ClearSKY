
---------------
#pasos para crear la base de datos
psql
sudo -i -u postgres

CREATE DATABASE clearsky;
CREATE USER clearsky WITH PASSWORD 'securepassword';  # Updated password
GRANT ALL PRIVILEGES ON DATABASE clearsky TO clearsky;
\q
exit

python3 manage.py makemigrations
python3 manage.py migrate

python3 manage.py runserver

sudo -u postgres psql clearsky
\dt

DELETE FROM users_user WHERE username = 'nombre_del_usuario_a_eliminar';

DELETE FROM users_user WHERE username = 'griego1';
DELETE FROM grades_gradeassignment WHERE student_id = 7;
DELETE FROM grades_questiongrade WHERE grade_assignment_id = 6;


----------
#permitir conexiones externas:
sudo nano /etc/postgresql/15/main/postgresql.conf
-->
listen_addresses = '*'

sudo nano /etc/postgresql/<versión>/main/pg_hba.conf
-->
host    all             all             0.0.0.0/0               md5
----------------
BD credentials:

host: localhost / 127.0.0.1
BD: clearsky
user: clearsky
pw: securepassword
port: 5432

----------

#iniciar el servidor django
 python3 manage.py runserver

-----------------
 #registrar un usuario

 curl -X POST http://localhost:8000/api/users/register/ \
-H "Content-Type: application/json" \
-d '{
  "username": "maria98",
  "email": "maria@uni.edu",
  "name": "Maria Gonzalez",
  "password": "secure123",
  "role": "student"
}'



---------------

#login maria

curl -X POST http://localhost:8000/api/users/login/ \
-H "Content-Type: application/json" \
-d '{
  "username": "maria98",
  "password": "secure123"
}'

respuesta login: 
{"token":"1ff2aa7a8519298d1372a2797791757aca9b363b","user":{"id":1,"username":"maria98","email":"maria@uni.edu","name":"Maria Gonzalez","role":"student"}}


-------------
#obtener perfil

curl -X GET http://localhost:8000/api/users/me/ \
-H "Authorization: Token 1ff2aa7a8519298d1372a2797791757aca9b363b"

------
INSTITUTIONS
crear un perfil representative:

 curl -X POST http://localhost:8000/api/users/register/ \
-H "Content-Type: application/json" \
-d '{
  "username": "axel98",
  "email": "axel@uni.edu",
  "name": "Axel Gonzalez",
  "password": "secure123",
  "role": "representative"
}'
------------
 curl -X POST http://localhost:8000/api/users/register/ \
-H "Content-Type: application/json" \
-d '{
  "username": "aleix44",
  "email": "aleix@uni.edu",
  "name": "Aleix Parrilla",
  "password": "secure123",
  "role": "representative"
}'

curl -X POST http://localhost:8000/api/users/login/ \
-H "Content-Type: application/json" \
-d '{
  "username": "aleix44",
  "password": "secure123"
}'

token:
72e16356de4c223ad0833118d0ccec113bcf1a08
----------


 curl -X POST http://localhost:8000/api/users/register/ \
-H "Content-Type: application/json" \
-d '{
  "username": "pedro34",
  "email": "pedro@uni.edu",
  "name": "Pedro Porro",
  "password": "secure123",
  "role": "representative"
}'

curl -X POST http://localhost:8000/api/users/login/ \
-H "Content-Type: application/json" \
-d '{
  "username": "pedro34",
  "password": "secure123"
}'

f868c6e899d31104093ddda73dcd685fc8228644
--------

crear una institucion:



curl -X POST http://localhost:8000/api/users/login/ \
-H "Content-Type: application/json" \
-d '{
  "username": "axel98",
  "password": "secure123"
}'

token: 
b1b1961933a4404a6ff7ee6f247fbbaeed5b0f09

def curl:

curl -X POST http://localhost:8000/api/institutions/create/ \
     -H "Content-Type: application/json" \
     -H "Authorization: Token f868c6e899d31104093ddda73dcd685fc8228644" \
     -d '{
           "name": "Universitat Politècnica de Valencia",
           "email": "contacto@upc.edu",
           "representatives":[2,3]
         }'


for list: 

curl -X GET http://localhost:8000/api/institutions/ \
  -H "Authorization: Token  b1b1961933a4404a6ff7ee6f247fbbaeed5b0f09"

#We try to create an institution with an user that has not the role of  representative (maria)
token:
1ff2aa7a8519298d1372a2797791757aca9b363b

curl -X POST http://localhost:8000/api/institutions/create/ \
     -H "Content-Type: application/json" \
     -H "Authorization: Token 1ff2aa7a8519298d1372a2797791757aca9b363b" \
     -d '{
           "name": "Universitat Politècnica de Catalunya",
           "email": "contacto@upc.edu",
           "representative": 1
         }'

answer: {"detail":"You do not have permission to perform this action."}

#We try to do the same but for list:
We can list it, should be something for only representative??

curl -X GET http://localhost:8000/api/institutions/ \
  -H "Authorization: Token 1ff2aa7a8519298d1372a2797791757aca9b363b"


-------------------------
#TEST1 : delete the institution without being representative

curl -X DELETE http://localhost:8000/api/institutions/1/delete/ \
  -H "Authorization: Token 1ff2aa7a8519298d1372a2797791757aca9b363b"

  answer: {"detail":"You do not have permission to perform this action.}

#TEST2: delete the institution without being the owner

curl -X DELETE http://localhost:8000/api/institutions/1/delete/ \
  -H "Authorization: Token 72e16356de4c223ad0833118d0ccec113bcf1a08"

{"detail":"You do not have permission to perform this action. }

#TEST3 delete being the owner:


curl -X DELETE http://localhost:8000/api/institutions/1/delete/ \
  -H "Authorization: Token b1b1961933a4404a6ff7ee6f247fbbaeed5b0f09"

#no answer == deleted 


curl -X DELETE http://localhost:8000/api/institutions/4/hard-delete/ \
     -H "Authorization: Token f868c6e899d31104093ddda73dcd685fc8228644"


curl -X POST http://localhost:8000/api/institutions/create/ \
     -H "Content-Type: application/json" \
     -H "Authorization: Token f868c6e899d31104093ddda73dcd685fc8228644" \
     -d '{
           "name": "Universitat Politècnica de Valencia",
           "email": "contacto@upc.edu",
           "representatives":[1,3,4]
         }'


------------------------
#update representatives of a institution



  curl -X POST http://localhost:8000/api/institutions/5/update-representatives/ \
  -H "Content-Type: application/json" \
  -H "Authorization: Token f868c6e899d31104093ddda73dcd685fc8228644" \
  -d '{"action": "add", "user_ids": [1]}'



  curl -X POST http://localhost:8000/api/institutions/5/update-representatives/ \
  -H "Content-Type: application/json" \
  -H "Authorization: Token f868c6e899d31104093ddda73dcd685fc8228644" \
  -d '{"action": "remove", "user_ids": [1]}'


  ---------------
  Solo puedes registrar usuarios si eres un representative (cambiar)


  students:

  go to my courses:

  * ver cursos, exam period, grade status y acciones como:
  *** view grades, ask for review ( si esta abierto el status), view review status (si has pedido antes)
  *** view grades --> ver el total y 


  -----------------------------
  Crear un instructor:

   curl -X POST http://localhost:8000/api/users/register/ \
-H "Content-Type: application/json" \
-d '{
  "username": "profe1",
  "email": "profe1@uni.edu",
  "name": "Profe",
  "password": "password",
  "role": "instructor"
}'

curl -X POST http://localhost:8000/api/users/login/ \
-H "Content-Type: application/json" \
-d '{
  "username": "profe1",
  "password": "password"
}'

03c8817e63a21296163af3722f63adc01ed40d77

------
Probar a crear un curso: 
curl -X POST http://localhost:8000/api/courses/create/ \
  -H "Content-Type: application/json" \
  -H "Authorization: Token 03c8817e63a21296163af3722f63adc01ed40d77" \
  -d '{
        "code": "3205",
        "title": "ΒΑΘΜΟΛΟΓΙΟ ΤΕΧΝΟΛΟΓΙΑ ΛΟΓΙΣΜΙΚΟΥ",
        "email": "curso@uni.edu",
        "password": "password",
        "institution": 1,
        "instructors": [5]
      }'

      {"id":1,"code":"3205","title":"ΒΑΘΜΟΛΟΓΙΟ ΤΕΧΝΟΛΟΓΙΑ ΛΟΓΙΣΜΙΚΟΥ","email":"curso@uni.edu","institution":1,"instructors":[5]}
      


Probar a subir un excel:



 curl -X POST http://localhost:8000/api/users/register/ \
-H "Content-Type: application/json" \
-d '{
  "username": "griego1",
  "email": "el84623@mail.ntua.gr",
  "name": "ΚΑΡΑΓΙΑΝΝΗΣ ΕΛΕΝΗ",
  "password": "secure123",
  "role": "student"
}'

curl -X POST http://localhost:8000/api/users/register/ \
  -H "Content-Type: application/json" \
  -d '{
        "username": "griego1",
        "email": "el84623@mail.ntua.gr",
        "name": "ΚΑΡΑΓΙΑΝΝΗΣ ΕΛΕΝΗ",
        "password": "secure123",
        "role": "student",
        "registration_id": "03184623"
      }'


  curl -X POST http://localhost:8000/api/grades/upload-excel/ \
  -H "Authorization: Token 03c8817e63a21296163af3722f63adc01ed40d77" \
  -F "file=@/home/axel/Escritorio/UNI/8quatri/SaaS/project_root/excel/data1_basic.xlsx" \
  -F "course_name=ΒΑΘΜΟΛΟΓΙΟ ΤΕΧΝΟΛΟΓΙΑ ΛΟΓΙΣΜΙΚΟΥ  " \
  -F "semester=2024-2025" \
  -F "num_grades=102"

  
  curl -X POST http://localhost:8000/api/grades/upload-excel/ \
  -H "Authorization: Token 03c8817e63a21296163af3722f63adc01ed40d77" \
  -F "file=@/home/axel/Escritorio/UNI/8quatri/SaaS/project_root/excel/data2_detailed.xlsx" \
  -F "course_name=ΒΑΘΜΟΛΟΓΙΟ ΤΕΧΝΟΛΟΓΙΑ ΛΟΓΙΣΜΙΚΟΥ  " \
  -F "semester=Spring 2024-2025" \
  -F "num_grades=102"


#se procesa bien, vamos a por los graficos, creamos a 4 griegos


curl -X POST http://localhost:8000/api/users/register/ \
  -H "Content-Type: application/json" \
  -d '{
        "username": "griego4",
        "email": "el84621@mail.ntua.gr",
        "name": "ΒΑΣΙΛΕΙΟΥ ΣΟΦΙΑ",
        "password": "secure123",
        "role": "student",
        "registration_id": "03184621"
      }'


#intentamos crear los plots con las notas


curl -X GET http://localhost:8000/api/grades/courses/COURSE_ID/semester/SEMESTER_NAME/statistics/ \
  -H "Authorization: Token 03c8817e63a21296163af3722f63adc01ed40d77"


#el espacio es %20

  curl -X GET http://localhost:8000/api/grades/courses/1/semester/statistics/Spring%202024-2025/ \
  -H "Authorization: Token 03c8817e63a21296163af3722f63adc01ed40d77"



# probamos el enpoint de que un estudiante obtenga su propia notas

curl -X GET http://localhost:8000/api/grades/grades/ \
  -H "Authorization: Token 9ba4a0fa9440e375c8ab1332f875b2b08144113b"


curl -X POST http://localhost:8000/api/users/login/ \
-H "Content-Type: application/json" \
-d '{
  "username": "griego1",
  "password": "secure123"
}'

token:
9ba4a0fa9440e375c8ab1332f875b2b08144113b


#dejar una nota como aboerta

curl -X PUT http://localhost:8000/api/grades/grades/22/update-state/ \
  -H "Authorization: Token 03c8817e63a21296163af3722f63adc01ed40d77" \
  -H "Content-Type: application/json" \
  -d '{"state": "OPEN"}'

#probar a dejar una review (estudiante)
curl -X POST http://localhost:8000/api/grades/grades/22/request-review/ \
  -H "Authorization: Token 9ba4a0fa9440e375c8ab1332f875b2b08144113b" \
  -H "Content-Type: application/json" \
  -d '{
        "reason": "Creo que merezco una mejor calificación en la pregunta Q03 debido a mi explicación detallada."
      }'

#responder una review (profe):

curl -X POST http://localhost:8000/api/grades/reviews/2/respond/ \
  -H "Authorization: Token 03c8817e63a21296163af3722f63adc01ed40d77" \
  -H "Content-Type: application/json" \
  -d '{
        "response": "Hemos revisado tu solicitud. La calificación se mantiene ya que la explicación fue insuficiente para los puntos máximos."
      }'

#obtener info reviews (profe)

curl -X GET http://localhost:8000/api/grades/reviews/ \
  -H "Authorization: Token 03c8817e63a21296163af3722f63adc01ed40d77"


#obtener info de las notas estudiante:

curl -X GET http://localhost:8000/api/grades/grades/ \
  -H "Authorization: Token 9ba4a0fa9440e375c8ab1332f875b2b08144113b"



  http://192.168.1.105:8000/api/


  # Comando para ejecutar desde Windows
curl -X POST http://192.168.1.105:8000/api/users/login/ \
-H "Content-Type: application/json" \
-d '{
  "username": "griego1",
  "password": "secure123"
}'


172.20.10.2/28

frontend

ng serve --open

backend

python3 manage.py runserver 0.0.0.0:8000